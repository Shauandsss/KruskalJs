{"version":3,"sources":["components/Lines/index.jsx","components/Code/index.jsx","components/Input--Edges/index.jsx","components/Input--Nodes/index.jsx","components/kruskal/index.jsx","App.js","index.js"],"names":["props","useState","positions","setPositions","edges","setEdges","useEffect","a","data","data2","loadAll","document","addEventListener","getElementPosit","el","tl","i","length","getEdgesPosit","el1","el2","coordinate","xy1","xy2","className","cN","visibility","undefined","map","val","id","x1","y1","x2","y2","stroke","x","y","fill","type","value","valueEdge1","valueEdge2","valueEdge3","_","require","edgesSolved","setEdgesSolved","nodes","setNodes","loading","setLoading","edgesVis","setEdgesVis","edgesVisSol","setEdgesVisSol","getElementById","getPositionX","element","getBoundingClientRect","getPositionY","executeKruskal","nos","vertices","console","clear","mst","floresta","no","verticesOrdenados","sortBy","vertice","log","pop","no1","no2","t1","filter","arvore","include","t2","without","push","union","ClassName","App","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.145b124a.chunk.js","sourcesContent":["/* eslint-disable no-loop-func */\r\n/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable import/no-anonymous-default-export */\r\nimport React, { useEffect, useState } from 'react';\r\nimport './Lines.scss'\r\n\r\nexport default (props) => {\r\n    const [positions, setPositions] = useState([[]])\r\n    const [edges, setEdges] = useState([[]])\r\n    \r\n    useEffect (() => {\r\n        const loadAll = async () => {\r\n            setPositions(props.data)\r\n            setEdges(props.data2)\r\n        }\r\n        loadAll()\r\n    }, [positions])\r\n\r\n    document.addEventListener('DOMContentLoaded', function () {\r\n     //   document.getElementById(\"Btn\").addEventListener(\"click\", returnLeft(\"A\"));\r\n    });\r\n \r\n    const getElementPosit = ( el, tl ) => {\r\n        for(var i=0;i<positions.length;i++){\r\n            if(positions[i][0] === el){   \r\n                return positions[i][tl]\r\n            }\r\n        }\r\n    }\r\n    const getEdgesPosit = ( el1, el2, coordinate ) => {\r\n        for(var i=0;i<positions.length;i++){\r\n            if(positions[i][0] === el1){   \r\n                var xy1 = positions[i][coordinate]\r\n            }\r\n            if(positions[i][0] === el2){   \r\n                var xy2 = positions[i][coordinate]\r\n            }\r\n        }\r\n        return (xy1 + xy2)/2 \r\n    }\r\n    return (\r\n            <svg className={props.cN} visibility={props.visibility}>\r\n                    {positions[0][1] > 0 && positions[0][1] !== undefined && edges.map((val)=> {\r\n                        return <>\r\n                                <line  className=\"Line\" \r\n                                    key={(val[0])+\"_\"+(val[1])} \r\n                                    id={(val[0])+\"_\"+(val[1])} \r\n                                    x1={-620 + getElementPosit(val[0], 2)} \r\n                                    y1={-160 + getElementPosit(val[0], 1)} \r\n                                    x2={-620 + getElementPosit(val[1], 2)} \r\n                                    y2={-160 + getElementPosit(val[1], 1)} \r\n                                    stroke=\"White\">\r\n                                </line>  \r\n                                <text className=\"TextLine\" x={-620 + getEdgesPosit(val[0], val[1], 2)} y={-160 + getEdgesPosit(val[0], val[1], 1)} fill=\"white\">{val[2]}</text>    \r\n                               </>\r\n                    })}\r\n            </svg>\r\n\r\n    )\r\n}\r\n\r\n","/* eslint-disable no-loop-func */\r\n/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable import/no-anonymous-default-export */\r\nimport React, { useEffect } from 'react';\r\nimport './Code.scss'\r\n\r\nexport default (props) => {\r\n \r\n\r\n    useEffect (() => {\r\n\r\n    }, [])\r\n    \r\n    return (\r\n        <div  className=\"Code--Main\">\r\n            <pre>\r\n                <code>\r\n                    <text className=\"DarkBlue\">function </text><text className=\"Yellow\">executeKruskal</text><text className=\"Purple\">(</text><text className=\"LightBlue\">nos, vertices</text><text className=\"Purple\">) &#123;</text><br></br>\r\n                    <text className=\"DarkBlue\">   var </text><text className=\"DarkBlue\">mst</text> <text className=\"White\">=</text> <text className=\"DarkBlue\">[]</text>;<br></br>\r\n                    <text className=\"DarkBlue\">   var </text><text className=\"LightBlue\">floresta </text> <text className=\"White\">=</text> <text className=\"LightBlue\"> _</text>.<text className=\"Yellow\"> map</text><text className=\"LightBlue\">(nos</text>,<text className=\"DarkBlue\">function</text><text className=\"Yellow\">(</text><text className=\"LightBlue\">no</text><text className=\"Yellow\">) &#123;</text><text className=\"Purple\">return &#91;</text><text className=\"LightBlue\">no</text><text className=\"Purple\">&#93;</text>; <text className=\"Yellow\">&#125;</text><text className=\"LightBlue\">)</text>;  <br></br>             \r\n                    <text className=\"DarkBlue\">   var </text><text className=\"LightBlue\">verticesOrdenados</text> <text className=\"White\">=</text> <text className=\"LightBlue\"> _</text>.<text className=\"Yellow\">sortBy</text><text className=\"LightBlue\">(vertices</text>, <text className=\"DarkBlue\">function</text><text className=\"Yellow\">(</text><text className=\"LightBlue\">vertice</text><text className=\"Yellow\">)</text><text className=\"Yellow\">) &#123;</text><br></br><text className=\"Purple\">       return</text> -<text className=\"LightBlue\">vertice</text><text className=\"Purple\">&#91;</text><text className=\"Green\">2</text><text className=\"Purple\">&#93;</text>; <text className=\"Yellow\">&#125;</text><text className=\"LightBlue\">)</text>;  <br></br>                 \r\n                    <text className=\"Purple\">   while</text><text className=\"LightBlue\">(floresta</text>.<text className=\"LightBlue\">length</text> &#62; <text className=\"Green\">1</text> <text className=\"LightBlue\">) &#123;</text> <br></br>\r\n                    <text className=\"DarkBlue\">       var </text><text className=\"LightBlue\">vertice</text> <text className=\"White\">=</text> <text className=\"LightBlue\">verticesOrdenados</text>.<text className=\"Yellow\">pop()</text><br></br>\r\n                    <text className=\"DarkBlue\">       var </text><text className=\"LightBlue\">no1</text> <text className=\"White\">=</text> <text className=\"LightBlue\">vertice</text><text className=\"Yellow\">&#91;</text><text className=\"Green\">0</text><text className=\"Yellow\">&#93;</text><text className=\"Yellow\">,</text><br></br>\r\n                    <text className=\"DarkBlue\">           </text><text className=\"LightBlue\">no2</text> <text className=\"White\">=</text> <text className=\"LightBlue\">vertice</text><text className=\"Yellow\">&#91;</text><text className=\"Green\">1</text><text className=\"Yellow\">&#93;</text><text className=\"Yellow\">,</text><br></br>\r\n                    <text className=\"DarkBlue\">       var </text><text className=\"LightBlue\">t1</text> <text className=\"White\">=</text> <text className=\"LightBlue\"> _</text>.<text className=\"Yellow\">filter(</text><text className=\"LightBlue\">floresta</text>, <text className=\"DarkBlue\">function</text><text className=\"Purple\">(</text><text className=\"LightBlue\">arvore</text><text className=\"Purple\">) &#123;</text> <br></br>\r\n                    <text className=\"Purple\">         return</text> <text className=\"LightBlue\">_</text>.<text className=\"Yellow\">include</text><text className=\"LightBlue\">(arvore</text>, <text className=\"LightBlue\">no1)</text>;<br></br>\r\n                    <text className=\"Purple\">       &#125;</text><text className=\"Yellow\">)</text>;<br></br>\r\n                    <text className=\"DarkBlue\">      var </text><text className=\"LightBlue\">t2</text> <text className=\"White\">=</text> <text className=\"LightBlue\"> _</text>.<text className=\"Yellow\">filter(</text><text className=\"LightBlue\">floresta</text>, <text className=\"DarkBlue\">function</text><text className=\"Purple\">(</text><text className=\"LightBlue\">arvore</text><text className=\"Purple\">) &#123;</text> <br></br>\r\n                    <text className=\"Purple\">         return</text> <text className=\"LightBlue\">_</text>.<text className=\"Yellow\">include</text><text className=\"LightBlue\">(arvore</text>, <text className=\"LightBlue\">no2)</text>;<br></br>\r\n                    <text className=\"Purple\">       &#125;</text><text className=\"Yellow\">)</text>;<br></br>\r\n                    <text className=\"Purple\">       if</text><text className=\"Yellow\">(</text><text className=\"LightBlue\">t1</text> <text className=\"White\">!==</text> <text className=\"LightBlue\">t2</text><text className=\"Yellow\">) &#123;</text><br></br>\r\n                    <text className=\"LightBlue\">          floresta</text> <text className=\"White\">=</text> <text className=\"LightBlue\">_</text>.<text className=\"Yellow\">without</text><text className=\"Purple\">(</text><text className=\"LightBlue\">floresta</text>, <text className=\"LightBlue\"> t1[</text><text className=\"Green\">0</text><text className=\"LightBlue\">]</text>, <text className=\"LightBlue\">t2[</text><text className=\"Green\">0</text><text className=\"LightBlue\">]</text><text className=\"Purple\">)</text>;<br></br>\r\n                    <text className=\"LightBlue\">          floresta</text>.<text className=\"Yellow\">push</text><text className=\"Purple\">(</text><text className=\"LightBlue\">_</text>.<text className=\"Yellow\">union</text><text className=\"LightBlue\">(t1</text><text className=\"Yellow\">[</text><text className=\"Green\">2</text><text className=\"Yellow\">]</text>, <text className=\"LightBlue\"> t2</text><text className=\"Yellow\">[</text><text className=\"Green\">0</text><text className=\"Yellow\">]</text><text className=\"LightBlue\">)</text><text className=\"Purple\">)</text>;<br></br>\r\n                    <text className=\"LightBlue\">          mst</text>.<text className=\"Yellow\">push</text><text className=\"Purple\">(</text><text className=\"LightBlue\">vertice</text><text className=\"Purple\">)</text>;<br></br>\r\n                    <text className=\"Yellow\">       &#125;</text><br></br>\r\n                    <text className=\"LightBlue\">    &#125;</text><br></br>\r\n                    <text className=\"Purple\">&#125;</text><br></br>\r\n                </code>\r\n            </pre>\r\n        </div>\r\n    )\r\n}\r\n\r\n","/* eslint-disable no-loop-func */\r\n/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable import/no-anonymous-default-export */\r\nimport React, { useEffect } from 'react';\r\nimport './input--Edges.scss'\r\n\r\nexport default (props) => {\r\n\r\n    useEffect (() => {\r\n        const loadAll = async () => {\r\n\r\n        }\r\n        loadAll()\r\n    }, [])\r\n \r\n    return (\r\n        <div className=\"Main\">\r\n            <input type=\"text\" value={props.valueEdge1} className=\"input--main\"></input>\r\n            <input type=\"text\" value={props.valueEdge2} className=\"input--main\"></input>\r\n            <input type=\"text\" value={props.valueEdge3} className=\"input--main\"></input>\r\n        </div>\r\n    )\r\n}\r\n\r\n","/* eslint-disable no-loop-func */\r\n/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable import/no-anonymous-default-export */\r\nimport React, { useEffect } from 'react';\r\nimport './input--Nodes.scss'\r\n\r\nexport default (props) => {\r\n\r\n    useEffect (() => {\r\n        const loadAll = async () => {\r\n\r\n        }\r\n        loadAll()\r\n    }, [])\r\n \r\n    return (\r\n        <>\r\n            <input type=\"text\" value={props.value} className=\"input--main\"></input>\r\n        </>\r\n    )\r\n}\r\n\r\n","/* eslint-disable no-unused-vars */\r\n/* eslint-disable no-loop-func */\r\n/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable import/no-anonymous-default-export */\r\nimport React, { useEffect, useState } from 'react';\r\nimport './kruskal.scss'\r\nimport Lines from '../Lines'\r\nimport Code from '../Code'\r\nimport InputEdges from '../Input--Edges'\r\nimport InputNodes from '../Input--Nodes'\r\n\r\nexport default () => {\r\n    const _ = require(\"underscore\");\r\n    const [edges, setEdges] = useState([[]])\r\n    const [edgesSolved, setEdgesSolved] = useState([[]])\r\n    const [nodes, setNodes] = useState([])\r\n    const [positions, setPositions] = useState([[]])\r\n    const [loading, setLoading] = useState()\r\n    const [edgesVis, setEdgesVis] = useState(\"visible\")\r\n    const [edgesVisSol, setEdgesVisSol] = useState(\"hidden\")\r\n\r\n    var el = document.getElementById('BtnSolve');\r\n    let x = el === null ? null : el.addEventListener(\"click\", hidde);\r\n    var el2 = document.getElementById('BtnBack');\r\n    let x2 = el2 === null ? null : el2.addEventListener(\"click\", show);\r\n    \r\n    function show(){\r\n        setEdgesVis(\"visible\")\r\n        setEdgesVisSol(\"hidden\")\r\n    }\r\n    function hidde(){\r\n        setEdgesVis(\"hidden\")\r\n        setEdgesVisSol(\"visible\")\r\n    }\r\n\r\n    useEffect (() => {\r\n\r\n        const loadAll = async () => {\r\n            setEdges([\r\n                [\"A\", \"B\", 7], [\"A\", \"D\", 5],\r\n                [\"B\", \"C\", 8], [\"B\", \"D\", 9], [\"B\", \"E\", 7],\r\n                [\"C\", \"E\", 5],\r\n                [\"D\", \"E\", 15], [\"D\", \"F\", 6],\r\n                [\"E\", \"F\", 8], [\"E\", \"G\", 9],\r\n                [\"F\", \"G\", 11]\r\n            ])\r\n            setNodes([\"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\"])\r\n\r\n\r\n        }         \r\n        loadAll();\r\n    }, [])\r\n\r\n    useEffect (() => {\r\n        const loadAll = async () => {\r\n            if(edges !== undefined)\r\n                setEdgesSolved(executeKruskal(nodes, edges))\r\n        }         \r\n        loadAll()\r\n    }, [loading])\r\n\r\n\r\n      useEffect (() => {\r\n        const loadAll = () => {\r\n            setPositions([  \r\n            [\"A\", getPositionY(document.getElementById(\"A\")), getPositionX(document.getElementById(\"A\"))], \r\n            [\"B\", getPositionY(document.getElementById(\"B\")), getPositionX(document.getElementById(\"B\"))],\r\n            [\"C\", getPositionY(document.getElementById(\"C\")), getPositionX(document.getElementById(\"C\"))], \r\n            [\"D\", getPositionY(document.getElementById(\"D\")), getPositionX(document.getElementById(\"D\"))], \r\n            [\"E\", getPositionY(document.getElementById(\"E\")), getPositionX(document.getElementById(\"E\"))], \r\n            [\"F\", getPositionY(document.getElementById(\"F\")), getPositionX(document.getElementById(\"F\"))],\r\n            [\"G\", getPositionY(document.getElementById(\"G\")), getPositionX(document.getElementById(\"G\"))]])\r\n        }\r\n        loadAll();\r\n        setLoading(true)\r\n      },[edges])\r\n\r\n    function getPositionX(element) {\r\n        if (element == null)\r\n            return\r\n        \r\n        var rect = element.getBoundingClientRect();\r\n        return rect.x\r\n    }\r\n    function getPositionY(element) {\r\n        if (element == null){\r\n            return\r\n        }\r\n        var rect = element.getBoundingClientRect();\r\n        return rect.y\r\n    }\r\n\r\n    function executeKruskal(nos, vertices) {\r\n        if((nos !== undefined) && (edges !== undefined)){\r\n            console.clear()\r\n            var mst = [];\r\n            var floresta = _.map(nos, function(no) { return [no]; });\r\n            var verticesOrdenados = _.sortBy(vertices, function(vertice) { return -vertice[2]; });\r\n            console.log(\" - - - - - - - - - - - - - - - - - - - - - - - -\")\r\n            console.log(\"Vertices originais - ↓\")\r\n            console.log(vertices)\r\n            console.log(\" Tamanho da Floresta - \" + floresta.length + \" nós\")\r\n            console.log(\"Floresta Original - ↓\")\r\n            console.log(floresta)\r\n            while(floresta.length > 1) {\r\n                console.log(\" - - - - - - - - - - - - - - - - - - - - - - - -\")\r\n                var vertice = verticesOrdenados.pop();\r\n                var no1 = vertice[0],\r\n                    no2 = vertice[1];\r\n                var t1 = _.filter(floresta, function(arvore) {\r\n                    return _.include(arvore, no1);\r\n                });\r\n                    \r\n                var t2 = _.filter(floresta, function(arvore) {\r\n                    return _.include(arvore, no2);\r\n                });\r\n\r\n                console.log(\"Verificando se [\" + no1 + \"] e [\" + no2 + \"] estão conectados      |\")\r\n        \r\n                if (t1 !== t2) {\r\n                    floresta = _.without(floresta, t1[0], t2[0]);\r\n                    floresta.push(_.union(t1[0], t2[0]));\r\n                    mst.push(vertice);\r\n                    \r\n                    console.log('Vertice sendo verificado - [\"' + vertice[0] + '\",\"'+vertice[1]+'\",\"'+vertice[2]+'\"]       |')\r\n                    console.log(\"Floresta - ↓                                   |\")\r\n                    console.log(floresta)\r\n                    \r\n                }\r\n            }\r\n            return mst;\r\n        }\r\n    }\r\n\r\n    return (\r\n        \r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n                <div className=\"Btns\">\r\n                    <button id=\"BtnSolve\" className=\"Btn\">Resolver</button>\r\n                    <button id=\"BtnBack\" className=\"Btn\">Retornar</button>\r\n                </div>\r\n                <div className=\"First-Col\">\r\n                    <div className=\"Input-Board\">\r\n                        {nodes.length > 0 && nodes.map((val)=>{\r\n                                    return  <InputNodes className=\"Input--Nodes\" key={val[0]} id={val[0]} value={val[0]}/>\r\n                        })}\r\n                        {edges.length > 0 && edges.map((val)=>{\r\n                                    return  <InputEdges className=\"Input--Edges\" key={val[0]} id={val[0]} valueEdge1={val[0]} valueEdge2={val[1]} valueEdge3={val[2]}/>\r\n                        })}\r\n                    </div>\r\n                </div>\r\n\r\n        \r\n\r\n                <div className=\"Second-Col\">\r\n                    <div ClassName=\"Main--Code\">\r\n                        <Code></Code>\r\n                    </div>\r\n                </div>\r\n                <div ClassName=\"Main--Graph\">\r\n                        <div className=\"MainNodes\">\r\n                            {nodes.length > 0 && nodes.map((val)=>{\r\n                                return  <div key={val[0]} id={val[0]}>\r\n                                            <h1>{val[0]}</h1>\r\n                                        </div>\r\n                            })}\r\n                        {positions[0][1] !== undefined   \r\n                            && <Lines data={positions} data2={edges} cN={\"Lines\"} visibility={edgesVis}/>} \r\n                        {edgesSolved !== undefined\r\n                            && <Lines data={positions} data2={edgesSolved} cN={\"LinesSolved\"} visibility={edgesVisSol}/>}  \r\n                        </div>\r\n                    </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import './App.css';\nimport Kruskal from './components/kruskal'\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">       \n        \n      </header>\n      <Kruskal></Kruskal>\n    </div>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}