{"version":3,"sources":["components/Lines/index.jsx","components/Code/index.jsx","components/Input--Edges/index.jsx","components/Input--Nodes/index.jsx","components/kruskal/index.jsx","App.js","index.js"],"names":["components_Lines","props","_useState","useState","_useState2","Object","slicedToArray","positions","setPositions","_useState3","_useState4","edges","setEdges","useEffect","_ref","asyncToGenerator","regenerator_default","a","mark","_callee","wrap","_context","prev","next","data","data2","stop","apply","this","arguments","loadAll","document","addEventListener","getElementPosit","el","tl","i","length","getEdgesPosit","el1","el2","coordinate","xy1","xy2","react_default","createElement","viewBox","className","cN","visibility","undefined","map","val","Fragment","key","id","x1","y1","x2","y2","stroke","x","y","fill","components_Code","Input_Edges","getElementById","valueEdge1","valueEdge2","valueEdge3","defaultValue","getValues","arVal","temp","childNodes","value","push","newNode","shift","onClicar","idMain","type","onBlur","Input_Nodes","components_kruskal","_","require","edgesSolved","setEdgesSolved","_useState5","_useState6","nodes","setNodes","_useState7","_useState8","_useState9","_useState10","loading","setLoading","_useState11","_useState12","edgesVis","setEdgesVis","_useState13","_useState14","edgesVisSol","setEdgesVisSol","_useState15","_useState16","getPositionX","element","getBoundingClientRect","getPositionY","executeKruskal","nos","vertices","console","clear","mst","floresta","no","verticesOrdenados","sortBy","vertice","log","pop","no1","no2","t1","filter","arvore","include","t2","without","union","quandoClicar","valorGerado","_ref2","_callee2","_context2","ClassName","App","title","ReactDOM","render","StrictMode","src_App"],"mappings":"2VAMeA,eAAA,SAACC,GAAU,IAAAC,EACYC,mBAAS,CAAC,KADtBC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GACfK,EADeH,EAAA,GACJI,EADIJ,EAAA,GAAAK,EAEIN,mBAAS,CAAC,KAFdO,EAAAL,OAAAC,EAAA,EAAAD,CAAAI,EAAA,GAEfE,EAFeD,EAAA,GAERE,EAFQF,EAAA,GAItBG,oBAAW,YACM,eAAAC,EAAAT,OAAAU,EAAA,EAAAV,CAAAW,EAAAC,EAAAC,KAAG,SAAAC,IAAA,OAAAH,EAAAC,EAAAG,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACZf,EAAaP,EAAMuB,MACnBZ,EAASX,EAAMwB,OAFH,wBAAAJ,EAAAK,SAAAP,MAAH,yBAAAL,EAAAa,MAAAC,KAAAC,aAAA,EAIbC,IACD,CAACvB,EAAWI,IAEfoB,SAASC,iBAAiB,mBAAoB,cAI9C,IAAMC,EAAkB,SAAEC,EAAIC,GAC1B,IAAI,IAAIC,EAAE,EAAEA,EAAE7B,EAAU8B,OAAOD,IAC3B,GAAG7B,EAAU6B,GAAG,KAAOF,EACnB,OAAO3B,EAAU6B,GAAGD,IAK1BG,EAAgB,SAAEC,EAAKC,EAAKC,GAC9B,IAAI,IAAIL,EAAE,EAAEA,EAAE7B,EAAU8B,OAAOD,IAAI,CAC/B,GAAG7B,EAAU6B,GAAG,KAAOG,EACnB,IAAIG,EAAMnC,EAAU6B,GAAGK,GAE3B,GAAGlC,EAAU6B,GAAG,KAAOI,EACnB,IAAIG,EAAMpC,EAAU6B,GAAGK,GAG/B,OAAQC,EAAMC,GAAK,GAEvB,OACQC,EAAA3B,EAAA4B,cAAA,OAAKC,QAAQ,kBAAkBC,UAAW9C,EAAM+C,GAAIC,WAAYhD,EAAMgD,YAC7D1C,EAAU,GAAG,GAAK,QAAyB2C,IAApB3C,EAAU,GAAG,IAAoBI,EAAMwC,IAAI,SAACC,GAChE,OAAOR,EAAA3B,EAAA4B,cAAAD,EAAA3B,EAAAoC,SAAA,KACPT,EAAA3B,EAAA4B,cAAA,QAAOE,UAAU,OACbO,IAAMF,EAAI,GAAI,IAAKA,EAAI,GACvBG,GAAKH,EAAI,GAAI,IAAKA,EAAI,GACtBI,GAAI,EAAIvB,EAAgBmB,EAAI,GAAI,GAChCK,GAAI,EAAIxB,EAAgBmB,EAAI,GAAI,GAChCM,GAAI,EAAIzB,EAAgBmB,EAAI,GAAI,GAChCO,GAAI,EAAI1B,EAAgBmB,EAAI,GAAI,GAChCQ,OAAO,UAEXhB,EAAA3B,EAAA4B,cAAA,QAAME,UAAU,WAAWc,EAAGvB,EAAcc,EAAI,GAAIA,EAAI,GAAI,GAAIU,EAAGxB,EAAcc,EAAI,GAAIA,EAAI,GAAI,GAAIW,KAAK,SAASX,EAAI,UChDhIY,SAAA,SAAC/D,GAOZ,OAJAY,oBAAW,aAER,IAGC+B,EAAA3B,EAAA4B,cAAA,OAAME,UAAU,cACZH,EAAA3B,EAAA4B,cAAA,WACID,EAAA3B,EAAA4B,cAAA,YACID,EAAA3B,EAAA4B,cAAA,QAAME,UAAU,YAAhB,aAA2CH,EAAA3B,EAAA4B,cAAA,QAAME,UAAU,UAAhB,kBAA8CH,EAAA3B,EAAA4B,cAAA,QAAME,UAAU,UAAhB,KAAiCH,EAAA3B,EAAA4B,cAAA,QAAME,UAAU,aAAhB,iBAAgDH,EAAA3B,EAAA4B,cAAA,QAAME,UAAU,UAAhB,OAAwCH,EAAA3B,EAAA4B,cAAA,WAClND,EAAA3B,EAAA4B,cAAA,QAAME,UAAU,YAAhB,WAAyCH,EAAA3B,EAAA4B,cAAA,QAAME,UAAU,YAAhB,OAF7C,IAEmFH,EAAA3B,EAAA4B,cAAA,QAAME,UAAU,SAAhB,KAFnF,IAEoHH,EAAA3B,EAAA4B,cAAA,QAAME,UAAU,YAAhB,MAFpH,IAEyJH,EAAA3B,EAAA4B,cAAA,WACrJD,EAAA3B,EAAA4B,cAAA,QAAME,UAAU,YAAhB,WAAyCH,EAAA3B,EAAA4B,cAAA,QAAME,UAAU,aAAhB,aAH7C,IAG0FH,EAAA3B,EAAA4B,cAAA,QAAME,UAAU,SAAhB,KAH1F,IAG2HH,EAAA3B,EAAA4B,cAAA,QAAME,UAAU,aAAhB,MAH3H,IAGiKH,EAAA3B,EAAA4B,cAAA,QAAME,UAAU,UAAhB,QAAoCH,EAAA3B,EAAA4B,cAAA,QAAME,UAAU,aAAhB,QAHrM,IAG6OH,EAAA3B,EAAA4B,cAAA,QAAME,UAAU,YAAhB,YAA0CH,EAAA3B,EAAA4B,cAAA,QAAME,UAAU,UAAhB,KAAiCH,EAAA3B,EAAA4B,cAAA,QAAME,UAAU,aAAhB,MAAqCH,EAAA3B,EAAA4B,cAAA,QAAME,UAAU,UAAhB,OAAwCH,EAAA3B,EAAA4B,cAAA,QAAME,UAAU,UAAhB,YAA4CH,EAAA3B,EAAA4B,cAAA,QAAME,UAAU,aAAhB,MAAqCH,EAAA3B,EAAA4B,cAAA,QAAME,UAAU,UAAhB,KAHtd,KAG6fH,EAAA3B,EAAA4B,cAAA,QAAME,UAAU,UAAhB,KAAsCH,EAAA3B,EAAA4B,cAAA,QAAME,UAAU,aAAhB,KAHniB,MAG0kBH,EAAA3B,EAAA4B,cAAA,WACtkBD,EAAA3B,EAAA4B,cAAA,QAAME,UAAU,YAAhB,WAAyCH,EAAA3B,EAAA4B,cAAA,QAAME,UAAU,aAAhB,qBAJ7C,IAIkGH,EAAA3B,EAAA4B,cAAA,QAAME,UAAU,SAAhB,KAJlG,IAImIH,EAAA3B,EAAA4B,cAAA,QAAME,UAAU,aAAhB,MAJnI,IAIyKH,EAAA3B,EAAA4B,cAAA,QAAME,UAAU,UAAhB,UAAsCH,EAAA3B,EAAA4B,cAAA,QAAME,UAAU,aAAhB,aAJ/M,KAI6PH,EAAA3B,EAAA4B,cAAA,QAAME,UAAU,YAAhB,YAA0CH,EAAA3B,EAAA4B,cAAA,QAAME,UAAU,UAAhB,KAAiCH,EAAA3B,EAAA4B,cAAA,QAAME,UAAU,aAAhB,WAA0CH,EAAA3B,EAAA4B,cAAA,QAAME,UAAU,UAAhB,KAAiCH,EAAA3B,EAAA4B,cAAA,QAAME,UAAU,UAAhB,OAAwCH,EAAA3B,EAAA4B,cAAA,WAASD,EAAA3B,EAAA4B,cAAA,QAAME,UAAU,UAAhB,iBAJpc,KAImfH,EAAA3B,EAAA4B,cAAA,QAAME,UAAU,aAAhB,WAA0CH,EAAA3B,EAAA4B,cAAA,QAAME,UAAU,UAAhB,KAAqCH,EAAA3B,EAAA4B,cAAA,QAAME,UAAU,SAAhB,KAAgCH,EAAA3B,EAAA4B,cAAA,QAAME,UAAU,UAAhB,KAJlmB,KAIyoBH,EAAA3B,EAAA4B,cAAA,QAAME,UAAU,UAAhB,KAAsCH,EAAA3B,EAAA4B,cAAA,QAAME,UAAU,aAAhB,KAJ/qB,MAIstBH,EAAA3B,EAAA4B,cAAA,WACltBD,EAAA3B,EAAA4B,cAAA,QAAME,UAAU,UAAhB,YAAwCH,EAAA3B,EAAA4B,cAAA,QAAME,UAAU,aAAhB,aAL5C,IAKyFH,EAAA3B,EAAA4B,cAAA,QAAME,UAAU,aAAhB,UALzF,MAKyIH,EAAA3B,EAAA4B,cAAA,QAAME,UAAU,SAAhB,KALzI,IAK0KH,EAAA3B,EAAA4B,cAAA,QAAME,UAAU,aAAhB,OAL1K,IAKsNH,EAAA3B,EAAA4B,cAAA,WAClND,EAAA3B,EAAA4B,cAAA,QAAME,UAAU,YAAhB,eAA6CH,EAAA3B,EAAA4B,cAAA,QAAME,UAAU,aAAhB,WANjD,IAM4FH,EAAA3B,EAAA4B,cAAA,QAAME,UAAU,SAAhB,KAN5F,IAM6HH,EAAA3B,EAAA4B,cAAA,QAAME,UAAU,aAAhB,qBAN7H,IAMkLH,EAAA3B,EAAA4B,cAAA,QAAME,UAAU,UAAhB,SAAqCH,EAAA3B,EAAA4B,cAAA,WACnND,EAAA3B,EAAA4B,cAAA,QAAME,UAAU,YAAhB,eAA6CH,EAAA3B,EAAA4B,cAAA,QAAME,UAAU,aAAhB,OAPjD,IAOwFH,EAAA3B,EAAA4B,cAAA,QAAME,UAAU,SAAhB,KAPxF,IAOyHH,EAAA3B,EAAA4B,cAAA,QAAME,UAAU,aAAhB,WAA0CH,EAAA3B,EAAA4B,cAAA,QAAME,UAAU,UAAhB,KAAqCH,EAAA3B,EAAA4B,cAAA,QAAME,UAAU,SAAhB,KAAgCH,EAAA3B,EAAA4B,cAAA,QAAME,UAAU,UAAhB,KAAqCH,EAAA3B,EAAA4B,cAAA,QAAME,UAAU,UAAhB,KAAiCH,EAAA3B,EAAA4B,cAAA,WAC1SD,EAAA3B,EAAA4B,cAAA,QAAME,UAAU,YAAhB,eAA6CH,EAAA3B,EAAA4B,cAAA,QAAME,UAAU,aAAhB,OARjD,IAQwFH,EAAA3B,EAAA4B,cAAA,QAAME,UAAU,SAAhB,KARxF,IAQyHH,EAAA3B,EAAA4B,cAAA,QAAME,UAAU,aAAhB,WAA0CH,EAAA3B,EAAA4B,cAAA,QAAME,UAAU,UAAhB,KAAqCH,EAAA3B,EAAA4B,cAAA,QAAME,UAAU,SAAhB,KAAgCH,EAAA3B,EAAA4B,cAAA,QAAME,UAAU,UAAhB,KAAqCH,EAAA3B,EAAA4B,cAAA,QAAME,UAAU,UAAhB,KAAiCH,EAAA3B,EAAA4B,cAAA,WAC1SD,EAAA3B,EAAA4B,cAAA,QAAME,UAAU,YAAhB,eAA6CH,EAAA3B,EAAA4B,cAAA,QAAME,UAAU,aAAhB,MATjD,IASuFH,EAAA3B,EAAA4B,cAAA,QAAME,UAAU,SAAhB,KATvF,IASwHH,EAAA3B,EAAA4B,cAAA,QAAME,UAAU,aAAhB,MATxH,IAS8JH,EAAA3B,EAAA4B,cAAA,QAAME,UAAU,UAAhB,WAAuCH,EAAA3B,EAAA4B,cAAA,QAAME,UAAU,aAAhB,YATrM,KASkPH,EAAA3B,EAAA4B,cAAA,QAAME,UAAU,YAAhB,YAA0CH,EAAA3B,EAAA4B,cAAA,QAAME,UAAU,UAAhB,KAAiCH,EAAA3B,EAAA4B,cAAA,QAAME,UAAU,aAAhB,UAAyCH,EAAA3B,EAAA4B,cAAA,QAAME,UAAU,UAAhB,OATtW,IAS+YH,EAAA3B,EAAA4B,cAAA,WAC3YD,EAAA3B,EAAA4B,cAAA,QAAME,UAAU,UAAhB,mBAVJ,IAUoDH,EAAA3B,EAAA4B,cAAA,QAAME,UAAU,aAAhB,KAVpD,IAUyFH,EAAA3B,EAAA4B,cAAA,QAAME,UAAU,UAAhB,WAAuCH,EAAA3B,EAAA4B,cAAA,QAAME,UAAU,aAAhB,WAVhI,KAU4KH,EAAA3B,EAAA4B,cAAA,QAAME,UAAU,aAAhB,QAV5K,IAUoNH,EAAA3B,EAAA4B,cAAA,WAChND,EAAA3B,EAAA4B,cAAA,QAAME,UAAU,UAAhB,YAA6CH,EAAA3B,EAAA4B,cAAA,QAAME,UAAU,UAAhB,KAXjD,IAWmFH,EAAA3B,EAAA4B,cAAA,WAC/ED,EAAA3B,EAAA4B,cAAA,QAAME,UAAU,YAAhB,cAA4CH,EAAA3B,EAAA4B,cAAA,QAAME,UAAU,aAAhB,MAZhD,IAYsFH,EAAA3B,EAAA4B,cAAA,QAAME,UAAU,SAAhB,KAZtF,IAYuHH,EAAA3B,EAAA4B,cAAA,QAAME,UAAU,aAAhB,MAZvH,IAY6JH,EAAA3B,EAAA4B,cAAA,QAAME,UAAU,UAAhB,WAAuCH,EAAA3B,EAAA4B,cAAA,QAAME,UAAU,aAAhB,YAZpM,KAYiPH,EAAA3B,EAAA4B,cAAA,QAAME,UAAU,YAAhB,YAA0CH,EAAA3B,EAAA4B,cAAA,QAAME,UAAU,UAAhB,KAAiCH,EAAA3B,EAAA4B,cAAA,QAAME,UAAU,aAAhB,UAAyCH,EAAA3B,EAAA4B,cAAA,QAAME,UAAU,UAAhB,OAZrW,IAY8YH,EAAA3B,EAAA4B,cAAA,WAC1YD,EAAA3B,EAAA4B,cAAA,QAAME,UAAU,UAAhB,mBAbJ,IAaoDH,EAAA3B,EAAA4B,cAAA,QAAME,UAAU,aAAhB,KAbpD,IAayFH,EAAA3B,EAAA4B,cAAA,QAAME,UAAU,UAAhB,WAAuCH,EAAA3B,EAAA4B,cAAA,QAAME,UAAU,aAAhB,WAbhI,KAa4KH,EAAA3B,EAAA4B,cAAA,QAAME,UAAU,aAAhB,QAb5K,IAaoNH,EAAA3B,EAAA4B,cAAA,WAChND,EAAA3B,EAAA4B,cAAA,QAAME,UAAU,UAAhB,YAA6CH,EAAA3B,EAAA4B,cAAA,QAAME,UAAU,UAAhB,KAdjD,IAcmFH,EAAA3B,EAAA4B,cAAA,WAC/ED,EAAA3B,EAAA4B,cAAA,QAAME,UAAU,UAAhB,aAAyCH,EAAA3B,EAAA4B,cAAA,QAAME,UAAU,UAAhB,KAAiCH,EAAA3B,EAAA4B,cAAA,QAAME,UAAU,aAAhB,MAf9E,IAeoHH,EAAA3B,EAAA4B,cAAA,QAAME,UAAU,SAAhB,OAfpH,IAeuJH,EAAA3B,EAAA4B,cAAA,QAAME,UAAU,aAAhB,MAAqCH,EAAA3B,EAAA4B,cAAA,QAAME,UAAU,UAAhB,OAAwCH,EAAA3B,EAAA4B,cAAA,WAChOD,EAAA3B,EAAA4B,cAAA,QAAME,UAAU,aAAhB,sBAhBJ,IAgB0DH,EAAA3B,EAAA4B,cAAA,QAAME,UAAU,SAAhB,KAhB1D,IAgB2FH,EAAA3B,EAAA4B,cAAA,QAAME,UAAU,aAAhB,KAhB3F,IAgBgIH,EAAA3B,EAAA4B,cAAA,QAAME,UAAU,UAAhB,WAAuCH,EAAA3B,EAAA4B,cAAA,QAAME,UAAU,UAAhB,KAAiCH,EAAA3B,EAAA4B,cAAA,QAAME,UAAU,aAAhB,YAhBxM,KAgBqPH,EAAA3B,EAAA4B,cAAA,QAAME,UAAU,aAAhB,QAAuCH,EAAA3B,EAAA4B,cAAA,QAAME,UAAU,SAAhB,KAAgCH,EAAA3B,EAAA4B,cAAA,QAAME,UAAU,aAAhB,KAhB5T,KAgBkWH,EAAA3B,EAAA4B,cAAA,QAAME,UAAU,aAAhB,OAAsCH,EAAA3B,EAAA4B,cAAA,QAAME,UAAU,SAAhB,KAAgCH,EAAA3B,EAAA4B,cAAA,QAAME,UAAU,aAAhB,KAAoCH,EAAA3B,EAAA4B,cAAA,QAAME,UAAU,UAAhB,KAhB5c,IAgB8eH,EAAA3B,EAAA4B,cAAA,WAC1eD,EAAA3B,EAAA4B,cAAA,QAAME,UAAU,aAAhB,sBAjBJ,IAiB0DH,EAAA3B,EAAA4B,cAAA,QAAME,UAAU,UAAhB,QAAoCH,EAAA3B,EAAA4B,cAAA,QAAME,UAAU,UAAhB,KAAiCH,EAAA3B,EAAA4B,cAAA,QAAME,UAAU,aAAhB,KAjB/H,IAiBoKH,EAAA3B,EAAA4B,cAAA,QAAME,UAAU,UAAhB,SAAqCH,EAAA3B,EAAA4B,cAAA,QAAME,UAAU,aAAhB,OAAsCH,EAAA3B,EAAA4B,cAAA,QAAME,UAAU,UAAhB,KAAiCH,EAAA3B,EAAA4B,cAAA,QAAME,UAAU,SAAhB,KAAgCH,EAAA3B,EAAA4B,cAAA,QAAME,UAAU,UAAhB,KAjBhT,KAiBmVH,EAAA3B,EAAA4B,cAAA,QAAME,UAAU,aAAhB,OAAsCH,EAAA3B,EAAA4B,cAAA,QAAME,UAAU,UAAhB,KAAiCH,EAAA3B,EAAA4B,cAAA,QAAME,UAAU,SAAhB,KAAgCH,EAAA3B,EAAA4B,cAAA,QAAME,UAAU,UAAhB,KAAiCH,EAAA3B,EAAA4B,cAAA,QAAME,UAAU,aAAhB,KAAoCH,EAAA3B,EAAA4B,cAAA,QAAME,UAAU,UAAhB,KAjB/f,IAiBiiBH,EAAA3B,EAAA4B,cAAA,WAC7hBD,EAAA3B,EAAA4B,cAAA,QAAME,UAAU,aAAhB,iBAlBJ,IAkBqDH,EAAA3B,EAAA4B,cAAA,QAAME,UAAU,UAAhB,QAAoCH,EAAA3B,EAAA4B,cAAA,QAAME,UAAU,UAAhB,KAAiCH,EAAA3B,EAAA4B,cAAA,QAAME,UAAU,aAAhB,WAA0CH,EAAA3B,EAAA4B,cAAA,QAAME,UAAU,UAAhB,KAlBpK,IAkBsMH,EAAA3B,EAAA4B,cAAA,WAClMD,EAAA3B,EAAA4B,cAAA,QAAME,UAAU,UAAhB,YAA6CH,EAAA3B,EAAA4B,cAAA,WAC7CD,EAAA3B,EAAA4B,cAAA,QAAME,UAAU,aAAhB,SAA6CH,EAAA3B,EAAA4B,cAAA,WAC7CD,EAAA3B,EAAA4B,cAAA,QAAME,UAAU,UAAhB,KAAsCH,EAAA3B,EAAA4B,cAAA,gBC/B3CoB,SAAA,SAAAhE,GAEXY,oBAAW,YACM,eAAAC,EAAAT,OAAAU,EAAA,EAAAV,CAAAW,EAAAC,EAAAC,KAAG,SAAAC,IAAA,OAAAH,EAAAC,EAAAG,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAEZQ,SAASmC,eAAejE,EAAMkE,WAAW,IAAIlE,EAAMmE,WAAW,IAAInE,EAAMoE,WAAW,MAAMC,aAAerE,EAAMkE,WAC9GpC,SAASmC,eAAejE,EAAMkE,WAAW,IAAIlE,EAAMmE,WAAW,IAAInE,EAAMoE,WAAW,MAAMC,aAAerE,EAAMmE,WAC9GrC,SAASmC,eAAejE,EAAMkE,WAAW,IAAIlE,EAAMmE,WAAW,IAAInE,EAAMoE,WAAW,MAAMC,aAAerE,EAAMoE,WAJlG,wBAAAhD,EAAAK,SAAAP,MAAH,yBAAAL,EAAAa,MAAAC,KAAAC,aAAA,EAObC,IACD,IAEH,IAAMyC,EAAY,WAId,IAHA,IAAIV,EAAI9B,SAASmC,eAAe,sBAC5B9B,EAAI,EACJoC,EAAQ,CAAC,IAAKC,EAAO,QACEvB,IAApBW,EAAEa,WAAWtC,IAA0C,OAApByB,EAAEa,WAAWtC,IAAqC,MAApByB,EAAEa,WAAWtC,IAAgByB,EAAEa,WAAWtC,GAAGsC,WAAW,GAAGC,MAAMtC,OAAS,GAC9IoC,EAAKG,KAAKf,EAAEa,WAAWtC,GAAGsC,WAAW,GAAGC,OACxCF,EAAKG,KAAKf,EAAEa,WAAWtC,GAAGsC,WAAW,GAAGC,OACxCF,EAAKG,KAAKf,EAAEa,WAAWtC,GAAGsC,WAAW,GAAGC,OACxCH,EAAMI,KAAKH,GACXA,EAAO,GACPrC,GAAQ,EAEZA,GAAQ,EAER,IAAIyC,EAAU9C,SAASmC,eAAe,sBACD,KAAhCW,EAAQH,WAAW,GAAGC,OAAkD,KAAhCE,EAAQH,WAAW,GAAGC,OAAkD,KAAhCE,EAAQH,WAAW,GAAGC,QACvGE,EAAQH,WAAW,GAAGC,MAAQ,GAC9BE,EAAQH,WAAW,GAAGC,MAAQ,GAC9BE,EAAQH,WAAW,GAAGC,MAAQ,IAQlCH,EAAMM,QACN7E,EAAM8E,SAASP,IAInB,OACI5B,EAAA3B,EAAA4B,cAAA,OAAKU,GAAItD,EAAM+E,OAAQjC,UAAU,eAC7BH,EAAA3B,EAAA4B,cAAA,SAAOoC,KAAK,OAAOC,OAAQX,EAAWhB,GAAItD,EAAMkE,WAAW,IAAIlE,EAAMmE,WAAW,IAAInE,EAAMoE,WAAW,KAAMtB,UAAU,gBACrHH,EAAA3B,EAAA4B,cAAA,SAAOoC,KAAK,OAAOC,OAAQX,EAAWhB,GAAItD,EAAMkE,WAAW,IAAIlE,EAAMmE,WAAW,IAAInE,EAAMoE,WAAW,KAAMtB,UAAU,gBACrHH,EAAA3B,EAAA4B,cAAA,SAAOoC,KAAK,SAASC,OAAQX,EAAWhB,GAAItD,EAAMkE,WAAW,IAAIlE,EAAMmE,WAAW,IAAInE,EAAMoE,WAAW,KAAMtB,UAAU,mBChDpHoC,SAAA,SAAClF,GASZ,OAPAY,oBAAW,YACM,eAAAC,EAAAT,OAAAU,EAAA,EAAAV,CAAAW,EAAAC,EAAAC,KAAG,SAAAC,IAAA,OAAAH,EAAAC,EAAAG,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,wBAAAF,EAAAK,SAAAP,MAAH,yBAAAL,EAAAa,MAAAC,KAAAC,aAAA,EAGbC,IACD,IAGCc,EAAA3B,EAAA4B,cAAAD,EAAA3B,EAAAoC,SAAA,KACIT,EAAA3B,EAAA4B,cAAA,SAAOoC,KAAK,OAAON,MAAO1E,EAAM0E,MAAO5B,UAAU,mBCL9CqC,EAAA,WACX,IAAMC,EAAIC,EAAQ,IADDpF,EAESC,mBAAS,CAAC,KAFnBC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAEVS,EAFUP,EAAA,GAEHQ,EAFGR,EAAA,GAAAK,EAGqBN,mBAAS,CAAC,KAH/BO,EAAAL,OAAAC,EAAA,EAAAD,CAAAI,EAAA,GAGV8E,EAHU7E,EAAA,GAGG8E,EAHH9E,EAAA,GAAA+E,EAIStF,mBAAS,IAJlBuF,EAAArF,OAAAC,EAAA,EAAAD,CAAAoF,EAAA,GAIVE,EAJUD,EAAA,GAIHE,EAJGF,EAAA,GAAAG,EAKiB1F,mBAAS,CAAC,KAL3B2F,EAAAzF,OAAAC,EAAA,EAAAD,CAAAwF,EAAA,GAKVtF,EALUuF,EAAA,GAKCtF,EALDsF,EAAA,GAAAC,EAMa5F,qBANb6F,EAAA3F,OAAAC,EAAA,EAAAD,CAAA0F,EAAA,GAMVE,EANUD,EAAA,GAMDE,EANCF,EAAA,GAAAG,EAOehG,mBAAS,WAPxBiG,EAAA/F,OAAAC,EAAA,EAAAD,CAAA8F,EAAA,GAOVE,EAPUD,EAAA,GAOAE,EAPAF,EAAA,GAAAG,EAQqBpG,mBAAS,UAR9BqG,EAAAnG,OAAAC,EAAA,EAAAD,CAAAkG,EAAA,GAQVE,EARUD,EAAA,GAQGE,EARHF,EAAA,GAAAG,EASCxG,mBAAS,CAAC,KATXyG,EAAAvG,OAAAC,EAAA,EAAAD,CAAAsG,EAAA,GAWbzE,GAXa0E,EAAA,GAAAA,EAAA,GAWR7E,SAASmC,eAAe,aAE7B1B,GADW,OAAPN,GAAqBA,EAAGF,iBAAiB,QAQjD,WACIsE,EAAY,UACZI,EAAe,aATT3E,SAASmC,eAAe,YACjB,OAAR1B,GAAsBA,EAAIR,iBAAiB,QAEpD,WACIsE,EAAY,WACZI,EAAe,YAiDnB,SAASG,EAAaC,GAClB,GAAe,MAAXA,EAIJ,OADWA,EAAQC,wBACPlD,EAEhB,SAASmD,EAAaF,GAClB,GAAe,MAAXA,EAKJ,OAFWA,EAAQC,wBAEPjD,EAEhB,SAASmD,EAAeC,EAAKC,GACzB,QAAYjE,IAARgE,QAAiChE,IAAVvC,EAAqB,CAC5CyG,QAAQC,QACR,IAAIC,EAAM,GACNC,EAAWlC,EAAElC,IAAI+D,EAAK,SAASM,GAAM,MAAO,CAACA,KAC7CC,EAAoBpC,EAAEqC,OAAOP,EAAU,SAASQ,GAAW,OAAQA,EAAQ,KAO/E,IANAP,QAAQQ,IAAI,oDACZR,QAAQQ,IAAI,+BACZR,QAAQQ,IAAIT,GACZC,QAAQQ,IAAI,0BAA4BL,EAASlF,OAAS,WAC1D+E,QAAQQ,IAAI,8BACZR,QAAQQ,IAAIL,GACNA,EAASlF,OAAS,GAAG,CACvB+E,QAAQQ,IAAI,oDACZ,IAAID,EAAUF,EAAkBI,MAC5BC,EAAMH,EAAQ,GACdI,EAAMJ,EAAQ,GACdK,EAAK3C,EAAE4C,OAAOV,EAAU,SAASW,GACjC,OAAO7C,EAAE8C,QAAQD,EAAQJ,KAGzBM,EAAK/C,EAAE4C,OAAOV,EAAU,SAASW,GACjC,OAAO7C,EAAE8C,QAAQD,EAAQH,KAG7BX,QAAQQ,IAAI,mBAAqBE,EAAM,QAAUC,EAAM,gCAEnDC,IAAOI,KACPb,EAAWlC,EAAEgD,QAAQd,EAAUS,EAAG,GAAII,EAAG,KAChCxD,KAAKS,EAAEiD,MAAMN,EAAG,GAAII,EAAG,KAChCd,EAAI1C,KAAK+C,GAETP,QAAQQ,IAAI,gCAAkCD,EAAQ,GAAK,MAAMA,EAAQ,GAAG,MAAMA,EAAQ,GAAG,cAC7FP,QAAQQ,IAAI,yDACZR,QAAQQ,IAAIL,IAIpB,OAAOD,GAIf,SAASiB,EAAaC,GAClBpB,QAAQQ,IAAIY,GACZ5H,EAAS4H,GACTpB,QAAQQ,IAAIjH,GACZuF,GAAW,GAGf,OAzGArF,oBAAW,YACM,eAAAC,EAAAT,OAAAU,EAAA,EAAAV,CAAAW,EAAAC,EAAAC,KAAG,SAAAC,IAAA,OAAAH,EAAAC,EAAAG,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACZX,EAAS,CACL,CAAC,IAAK,IAAK,GAAI,CAAC,IAAK,IAAK,GAC1B,CAAC,IAAK,IAAK,GAAI,CAAC,IAAK,IAAK,GAC1B,CAAC,IAAK,IAAK,GAAI,CAAC,IAAK,IAAK,GAC1B,CAAC,IAAK,IAAK,IAAK,CAAC,IAAK,IAAK,GAC3B,CAAC,IAAK,IAAK,GAAI,CAAC,IAAK,IAAK,GAC1B,CAAC,IAAK,IAAK,MAEfgF,EAAS,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,MAT5B,wBAAAvE,EAAAK,SAAAP,MAAH,yBAAAL,EAAAa,MAAAC,KAAAC,aAAA,EAWbC,IACD,IAEHjB,oBAAW,YACM,eAAA4H,EAAApI,OAAAU,EAAA,EAAAV,CAAAW,EAAAC,EAAAC,KAAG,SAAAwH,IAAA,OAAA1H,EAAAC,EAAAG,KAAA,SAAAuH,GAAA,cAAAA,EAAArH,KAAAqH,EAAApH,MAAA,YACC2B,IAAVvC,GACC6E,EAAeyB,EAAetB,EAAOhF,IAF7B,wBAAAgI,EAAAjH,SAAAgH,MAAH,yBAAAD,EAAA9G,MAAAC,KAAAC,aAAA,EAIbC,IACD,CAACmE,IAGFpF,oBAAW,WAELL,EAAa,CACb,CAAC,IAAKwG,EAAajF,SAASmC,eAAe,MAAO2C,EAAa9E,SAASmC,eAAe,OACvF,CAAC,IAAK8C,EAAajF,SAASmC,eAAe,MAAO2C,EAAa9E,SAASmC,eAAe,OACvF,CAAC,IAAK8C,EAAajF,SAASmC,eAAe,MAAO2C,EAAa9E,SAASmC,eAAe,OACvF,CAAC,IAAK8C,EAAajF,SAASmC,eAAe,MAAO2C,EAAa9E,SAASmC,eAAe,OACvF,CAAC,IAAK8C,EAAajF,SAASmC,eAAe,MAAO2C,EAAa9E,SAASmC,eAAe,OACvF,CAAC,IAAK8C,EAAajF,SAASmC,eAAe,MAAO2C,EAAa9E,SAASmC,eAAe,OACvF,CAAC,IAAK8C,EAAajF,SAASmC,eAAe,MAAO2C,EAAa9E,SAASmC,eAAe,SACvFkD,QAAQQ,IAAI,oBAIhB1B,GAAW,IACX,CAACvF,IAmEDiC,EAAA3B,EAAA4B,cAAA,OAAKE,UAAU,aACXH,EAAA3B,EAAA4B,cAAA,OAAKE,UAAU,OACXH,EAAA3B,EAAA4B,cAAA,OAAKE,UAAU,QACXH,EAAA3B,EAAA4B,cAAA,UAAQU,GAAG,WAAWR,UAAU,OAAhC,YACAH,EAAA3B,EAAA4B,cAAA,UAAQU,GAAG,UAAUR,UAAU,OAA/B,aAEJH,EAAA3B,EAAA4B,cAAA,OAAKE,UAAU,aACXH,EAAA3B,EAAA4B,cAAA,OAAKE,UAAU,eACXH,EAAA3B,EAAA4B,cAAA,oBACC8C,EAAMtD,OAAS,GAAKsD,EAAMxC,IAAI,SAACC,GACpB,OAAQR,EAAA3B,EAAA4B,cAACsC,EAAD,CAAapC,UAAU,eAAeO,IAAKF,EAAI,GAAIG,GAAIH,EAAI,GAAIuB,MAAOvB,EAAI,OAE9FR,EAAA3B,EAAA4B,cAAA,yBACAD,EAAA3B,EAAA4B,cAAA,sCAEAD,EAAA3B,EAAA4B,cAAA,OAAKU,GAAG,qBAAqBR,UAAU,sBAClCpC,EAAM0B,OAAS,GAAK1B,EAAMwC,IAAI,SAACC,GACpB,OAAQR,EAAA3B,EAAA4B,cAACoB,EAAD,CAAYe,OAAO,cAAcD,SAAUwD,EAAcxF,UAAU,eAAeO,IAAMF,EAAI,GAAI,IAAKA,EAAI,GAAKG,GAAKH,EAAI,GAAI,IAAKA,EAAI,GAAKe,WAAYf,EAAI,GAAIgB,WAAYhB,EAAI,GAAIiB,WAAYjB,EAAI,OAErNR,EAAA3B,EAAA4B,cAACoB,EAAD,CAAYe,OAAO,qBAAqBD,SAAUwD,EAAcxF,UAAU,oBAOtFH,EAAA3B,EAAA4B,cAAA,OAAKE,UAAU,cACXH,EAAA3B,EAAA4B,cAAA,OAAK+F,UAAU,cACXhG,EAAA3B,EAAA4B,cAACmB,EAAD,QAGRpB,EAAA3B,EAAA4B,cAAA,OAAKE,UAAU,aACV4C,EAAMtD,OAAS,GAAKsD,EAAMxC,IAAI,SAACC,GAC5B,OAAQR,EAAA3B,EAAA4B,cAAA,OAAKS,IAAKF,EAAI,GAAIG,GAAIH,EAAI,IACtBR,EAAA3B,EAAA4B,cAAA,UAAKO,EAAI,YAGRF,IAApB3C,EAAU,GAAG,IACPqC,EAAA3B,EAAA4B,cAAC7C,EAAD,CAAOwB,KAAMjB,EAAWkB,MAAOd,EAAOqC,GAAI,QAASC,WAAYoD,SACrDnD,IAAhBqC,GACM3C,EAAA3B,EAAA4B,cAAC7C,EAAD,CAAOwB,KAAMjB,EAAWkB,MAAO8D,EAAavC,GAAI,cAAeC,WAAYwD,KAElF7D,EAAA3B,EAAA4B,cAAA,MAAIE,UAAU,UAAd,mGC3KD8F,MAZf,WAEE,OADA9G,SAAS+G,MAAQ,UAEflG,EAAA3B,EAAA4B,cAAA,OAAKE,UAAU,OACbH,EAAA3B,EAAA4B,cAAA,UAAQE,UAAU,eAGlBH,EAAA3B,EAAA4B,cAACuC,EAAD,QCLN2D,IAASC,OACPpG,EAAA3B,EAAA4B,cAACD,EAAA3B,EAAMgI,WAAP,KACErG,EAAA3B,EAAA4B,cAACqG,EAAD,OAEFnH,SAASmC,eAAe","file":"static/js/main.148d2236.chunk.js","sourcesContent":["/* eslint-disable no-loop-func */\r\n/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable import/no-anonymous-default-export */\r\nimport React, { useEffect, useState } from 'react';\r\nimport './Lines.scss'\r\n\r\nexport default (props) => {\r\n    const [positions, setPositions] = useState([[]])\r\n    const [edges, setEdges] = useState([[]])\r\n    \r\n    useEffect (() => {\r\n        const loadAll = async () => {\r\n            setPositions(props.data)\r\n            setEdges(props.data2)\r\n        }\r\n        loadAll()\r\n    }, [positions, edges])\r\n\r\n    document.addEventListener('DOMContentLoaded', function () {\r\n     //   document.getElementById(\"Btn\").addEventListener(\"click\", returnLeft(\"A\"));\r\n    });\r\n \r\n    const getElementPosit = ( el, tl ) => {\r\n        for(var i=0;i<positions.length;i++){\r\n            if(positions[i][0] === el){   \r\n                return positions[i][tl]\r\n            }\r\n        }\r\n    }\r\n\r\n    const getEdgesPosit = ( el1, el2, coordinate ) => {\r\n        for(var i=0;i<positions.length;i++){\r\n            if(positions[i][0] === el1){   \r\n                var xy1 = positions[i][coordinate]\r\n            }\r\n            if(positions[i][0] === el2){   \r\n                var xy2 = positions[i][coordinate]\r\n            }\r\n        }\r\n        return (xy1 + xy2)/2 \r\n    }\r\n    return (\r\n            <svg viewBox=\"670 200 500 500\" className={props.cN} visibility={props.visibility}>\r\n                    {positions[0][1] > 0 && positions[0][1] !== undefined && edges.map((val)=> {\r\n                        return <>\r\n                        <line  className=\"Line\" \r\n                            key={(val[0])+\"_\"+(val[1])} \r\n                            id={(val[0])+\"_\"+(val[1])} \r\n                            x1={0 + getElementPosit(val[0], 2)} \r\n                            y1={0 + getElementPosit(val[0], 1)} \r\n                            x2={0 + getElementPosit(val[1], 2)} \r\n                            y2={0 + getElementPosit(val[1], 1)} \r\n                            stroke=\"White\">\r\n                        </line>  \r\n                        <text className=\"TextLine\" x={getEdgesPosit(val[0], val[1], 2)} y={getEdgesPosit(val[0], val[1], 1)} fill=\"white\">{val[2]}</text>    \r\n                       </>\r\n                    })}\r\n            </svg>\r\n    )\r\n}\r\n\r\n","/* eslint-disable no-loop-func */\r\n/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable import/no-anonymous-default-export */\r\nimport React, { useEffect } from 'react';\r\nimport './Code.scss'\r\n\r\nexport default (props) => {\r\n \r\n\r\n    useEffect (() => {\r\n\r\n    }, [])\r\n    \r\n    return (\r\n        <div  className=\"Code--Main\">\r\n            <pre>\r\n                <code>\r\n                    <text className=\"DarkBlue\">function </text><text className=\"Yellow\">executeKruskal</text><text className=\"Purple\">(</text><text className=\"LightBlue\">nos, vertices</text><text className=\"Purple\">) &#123;</text><br></br>\r\n                    <text className=\"DarkBlue\">   var </text><text className=\"DarkBlue\">mst</text> <text className=\"White\">=</text> <text className=\"DarkBlue\">[]</text>;<br></br>\r\n                    <text className=\"DarkBlue\">   var </text><text className=\"LightBlue\">floresta </text> <text className=\"White\">=</text> <text className=\"LightBlue\"> _</text>.<text className=\"Yellow\"> map</text><text className=\"LightBlue\">(nos</text>,<text className=\"DarkBlue\">function</text><text className=\"Yellow\">(</text><text className=\"LightBlue\">no</text><text className=\"Yellow\">) &#123;</text><text className=\"Purple\">return &#91;</text><text className=\"LightBlue\">no</text><text className=\"Purple\">&#93;</text>; <text className=\"Yellow\">&#125;</text><text className=\"LightBlue\">)</text>;  <br></br>             \r\n                    <text className=\"DarkBlue\">   var </text><text className=\"LightBlue\">verticesOrdenados</text> <text className=\"White\">=</text> <text className=\"LightBlue\"> _</text>.<text className=\"Yellow\">sortBy</text><text className=\"LightBlue\">(vertices</text>, <text className=\"DarkBlue\">function</text><text className=\"Yellow\">(</text><text className=\"LightBlue\">vertice</text><text className=\"Yellow\">)</text><text className=\"Yellow\">) &#123;</text><br></br><text className=\"Purple\">       return</text> -<text className=\"LightBlue\">vertice</text><text className=\"Purple\">&#91;</text><text className=\"Green\">2</text><text className=\"Purple\">&#93;</text>; <text className=\"Yellow\">&#125;</text><text className=\"LightBlue\">)</text>;  <br></br>                 \r\n                    <text className=\"Purple\">   while</text><text className=\"LightBlue\">(floresta</text>.<text className=\"LightBlue\">length</text> &#62; <text className=\"Green\">1</text> <text className=\"LightBlue\">) &#123;</text> <br></br>\r\n                    <text className=\"DarkBlue\">       var </text><text className=\"LightBlue\">vertice</text> <text className=\"White\">=</text> <text className=\"LightBlue\">verticesOrdenados</text>.<text className=\"Yellow\">pop()</text><br></br>\r\n                    <text className=\"DarkBlue\">       var </text><text className=\"LightBlue\">no1</text> <text className=\"White\">=</text> <text className=\"LightBlue\">vertice</text><text className=\"Yellow\">&#91;</text><text className=\"Green\">0</text><text className=\"Yellow\">&#93;</text><text className=\"Yellow\">,</text><br></br>\r\n                    <text className=\"DarkBlue\">           </text><text className=\"LightBlue\">no2</text> <text className=\"White\">=</text> <text className=\"LightBlue\">vertice</text><text className=\"Yellow\">&#91;</text><text className=\"Green\">1</text><text className=\"Yellow\">&#93;</text><text className=\"Yellow\">;</text><br></br>\r\n                    <text className=\"DarkBlue\">       var </text><text className=\"LightBlue\">t1</text> <text className=\"White\">=</text> <text className=\"LightBlue\"> _</text>.<text className=\"Yellow\">filter(</text><text className=\"LightBlue\">floresta</text>, <text className=\"DarkBlue\">function</text><text className=\"Purple\">(</text><text className=\"LightBlue\">arvore</text><text className=\"Purple\">) &#123;</text> <br></br>\r\n                    <text className=\"Purple\">         return</text> <text className=\"LightBlue\">_</text>.<text className=\"Yellow\">include</text><text className=\"LightBlue\">(arvore</text>, <text className=\"LightBlue\">no1)</text>;<br></br>\r\n                    <text className=\"Purple\">       &#125;</text><text className=\"Yellow\">)</text>;<br></br>\r\n                    <text className=\"DarkBlue\">      var </text><text className=\"LightBlue\">t2</text> <text className=\"White\">=</text> <text className=\"LightBlue\"> _</text>.<text className=\"Yellow\">filter(</text><text className=\"LightBlue\">floresta</text>, <text className=\"DarkBlue\">function</text><text className=\"Purple\">(</text><text className=\"LightBlue\">arvore</text><text className=\"Purple\">) &#123;</text> <br></br>\r\n                    <text className=\"Purple\">         return</text> <text className=\"LightBlue\">_</text>.<text className=\"Yellow\">include</text><text className=\"LightBlue\">(arvore</text>, <text className=\"LightBlue\">no2)</text>;<br></br>\r\n                    <text className=\"Purple\">       &#125;</text><text className=\"Yellow\">)</text>;<br></br>\r\n                    <text className=\"Purple\">       if</text><text className=\"Yellow\">(</text><text className=\"LightBlue\">t1</text> <text className=\"White\">!==</text> <text className=\"LightBlue\">t2</text><text className=\"Yellow\">) &#123;</text><br></br>\r\n                    <text className=\"LightBlue\">          floresta</text> <text className=\"White\">=</text> <text className=\"LightBlue\">_</text>.<text className=\"Yellow\">without</text><text className=\"Purple\">(</text><text className=\"LightBlue\">floresta</text>, <text className=\"LightBlue\"> t1[</text><text className=\"Green\">0</text><text className=\"LightBlue\">]</text>, <text className=\"LightBlue\">t2[</text><text className=\"Green\">0</text><text className=\"LightBlue\">]</text><text className=\"Purple\">)</text>;<br></br>\r\n                    <text className=\"LightBlue\">          floresta</text>.<text className=\"Yellow\">push</text><text className=\"Purple\">(</text><text className=\"LightBlue\">_</text>.<text className=\"Yellow\">union</text><text className=\"LightBlue\">(t1</text><text className=\"Yellow\">[</text><text className=\"Green\">2</text><text className=\"Yellow\">]</text>, <text className=\"LightBlue\"> t2</text><text className=\"Yellow\">[</text><text className=\"Green\">0</text><text className=\"Yellow\">]</text><text className=\"LightBlue\">)</text><text className=\"Purple\">)</text>;<br></br>\r\n                    <text className=\"LightBlue\">          mst</text>.<text className=\"Yellow\">push</text><text className=\"Purple\">(</text><text className=\"LightBlue\">vertice</text><text className=\"Purple\">)</text>;<br></br>\r\n                    <text className=\"Yellow\">       &#125;</text><br></br>\r\n                    <text className=\"LightBlue\">    &#125;</text><br></br>\r\n                    <text className=\"Purple\">&#125;</text><br></br>\r\n                </code>\r\n            </pre>\r\n        </div>\r\n    )\r\n}\r\n\r\n","/* eslint-disable no-loop-func */\r\n/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable import/no-anonymous-default-export */\r\nimport React, { useEffect } from 'react';\r\nimport './input--Edges.scss'\r\n\r\nexport default props => {\r\n\r\n    useEffect (() => {\r\n        const loadAll = async () => {\r\n\r\n            document.getElementById(props.valueEdge1+\"_\"+props.valueEdge2+\"_\"+props.valueEdge3+\"_1\").defaultValue = props.valueEdge1;\r\n            document.getElementById(props.valueEdge1+\"_\"+props.valueEdge2+\"_\"+props.valueEdge3+\"_2\").defaultValue = props.valueEdge2;\r\n            document.getElementById(props.valueEdge1+\"_\"+props.valueEdge2+\"_\"+props.valueEdge3+\"_3\").defaultValue = props.valueEdge3;\r\n\r\n        }\r\n        loadAll()\r\n    }, [])\r\n\r\n    const getValues = () => {\r\n        var x = document.getElementById(\"Main--Input--Edges\")\r\n        var i = 0;\r\n        var arVal = [{}], temp = []\r\n        while((x.childNodes[i] !== undefined) && (x.childNodes[i] !== null) && (x.childNodes[i] !== \" \") && (x.childNodes[i].childNodes[2].value.length > 0)){\r\n            temp.push(x.childNodes[i].childNodes[0].value)\r\n            temp.push(x.childNodes[i].childNodes[1].value)\r\n            temp.push(x.childNodes[i].childNodes[2].value)\r\n            arVal.push(temp)\r\n            temp = []\r\n            i = i + 1\r\n        }\r\n        i = i - 1\r\n        \r\n        var newNode = document.getElementById(\"Input--Edges--News\")\r\n        if ((newNode.childNodes[0].value !== \"\") && (newNode.childNodes[1].value !== \"\") && (newNode.childNodes[2].value !== \"\")){\r\n            newNode.childNodes[0].value = \"\"\r\n            newNode.childNodes[1].value = \"\"\r\n            newNode.childNodes[2].value = \"\"\r\n        }\r\n        //if((x.childNodes[i].childNodes[0].value.length > 0) && (x.childNodes[i].childNodes[1].value.length > 0) && (x.childNodes[i].childNodes[2].value.length > 0)){\r\n        //    x.childNodes[i].childNodes[0].value = \"\"\r\n        //    x.childNodes[i].childNodes[1].value = \"\"\r\n        //    x.childNodes[i].childNodes[2].value = null\r\n        //}\r\n        \r\n        arVal.shift()\r\n        props.onClicar(arVal)\r\n        \r\n    }\r\n\r\n    return (\r\n        <div id={props.idMain} className=\"Main--Edges\">\r\n            <input type=\"text\" onBlur={getValues} id={props.valueEdge1+\"_\"+props.valueEdge2+\"_\"+props.valueEdge3+\"_1\"} className=\"input--main\"></input>\r\n            <input type=\"text\" onBlur={getValues} id={props.valueEdge1+\"_\"+props.valueEdge2+\"_\"+props.valueEdge3+\"_2\"} className=\"input--main\"></input>\r\n            <input type=\"number\" onBlur={getValues} id={props.valueEdge1+\"_\"+props.valueEdge2+\"_\"+props.valueEdge3+\"_3\"} className=\"input--main\"></input>\r\n            \r\n        </div>\r\n        \r\n    )   \r\n}\r\n\r\n","/* eslint-disable no-loop-func */\r\n/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable import/no-anonymous-default-export */\r\nimport React, { useEffect } from 'react';\r\nimport './input--Nodes.scss'\r\n\r\nexport default (props) => {\r\n\r\n    useEffect (() => {\r\n        const loadAll = async () => {\r\n\r\n        }\r\n        loadAll()\r\n    }, [])\r\n \r\n    return (\r\n        <>\r\n            <input type=\"text\" value={props.value} className=\"input--main\"></input>\r\n        </>\r\n    )\r\n}\r\n\r\n","/* eslint-disable no-unused-vars */\r\n/* eslint-disable no-loop-func */\r\n/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable import/no-anonymous-default-export */\r\nimport React, { useEffect, useState } from 'react';\r\nimport './kruskal.scss'\r\nimport Lines from '../Lines'\r\nimport Code from '../Code'\r\nimport InputEdges from '../Input--Edges'\r\nimport InputNodes from '../Input--Nodes'\r\n\r\n\r\nexport default () => {\r\n    const _ = require(\"underscore\");\r\n    const [edges, setEdges] = useState([[]])\r\n    const [edgesSolved, setEdgesSolved] = useState([[]])\r\n    const [nodes, setNodes] = useState([])\r\n    const [positions, setPositions] = useState([[]])\r\n    const [loading, setLoading] = useState()\r\n    const [edgesVis, setEdgesVis] = useState(\"visible\")\r\n    const [edgesVisSol, setEdgesVisSol] = useState(\"hidden\")\r\n    const [v, setv] = useState([\"\"]);\r\n\r\n    var el = document.getElementById('BtnSolve');\r\n    let x = el === null ? null : el.addEventListener(\"click\", hidde);\r\n    var el2 = document.getElementById('BtnBack');\r\n    let x2 = el2 === null ? null : el2.addEventListener(\"click\", show);\r\n\r\n    function show(){\r\n        setEdgesVis(\"visible\")\r\n        setEdgesVisSol(\"hidden\")\r\n    }\r\n    function hidde(){\r\n        setEdgesVis(\"hidden\")\r\n        setEdgesVisSol(\"visible\")\r\n    }\r\n\r\n\r\n    useEffect (() => {\r\n        const loadAll = async () => {\r\n            setEdges([\r\n                [\"A\", \"B\", 7], [\"A\", \"D\", 5],\r\n                [\"B\", \"C\", 8], [\"B\", \"D\", 9], \r\n                [\"B\", \"E\", 7], [\"C\", \"E\", 5],\r\n                [\"D\", \"E\", 15], [\"D\", \"F\", 6],\r\n                [\"E\", \"F\", 8], [\"E\", \"G\", 9],\r\n                [\"F\", \"G\", 11]\r\n            ])\r\n            setNodes([\"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\"])\r\n        }         \r\n        loadAll();\r\n    }, [])\r\n\r\n    useEffect (() => {\r\n        const loadAll = async () => {\r\n            if(edges !== undefined)\r\n                setEdgesSolved(executeKruskal(nodes, edges))\r\n        }         \r\n        loadAll()\r\n    }, [loading])\r\n\r\n\r\n      useEffect (() => {\r\n        const loadAll = () => {\r\n            setPositions([  \r\n            [\"A\", getPositionY(document.getElementById(\"A\")), getPositionX(document.getElementById(\"A\"))], \r\n            [\"B\", getPositionY(document.getElementById(\"B\")), getPositionX(document.getElementById(\"B\"))],\r\n            [\"C\", getPositionY(document.getElementById(\"C\")), getPositionX(document.getElementById(\"C\"))], \r\n            [\"D\", getPositionY(document.getElementById(\"D\")), getPositionX(document.getElementById(\"D\"))], \r\n            [\"E\", getPositionY(document.getElementById(\"E\")), getPositionX(document.getElementById(\"E\"))], \r\n            [\"F\", getPositionY(document.getElementById(\"F\")), getPositionX(document.getElementById(\"F\"))],\r\n            [\"G\", getPositionY(document.getElementById(\"G\")), getPositionX(document.getElementById(\"G\"))]])\r\n            console.log(\"Seting positions\")\r\n        }\r\n       \r\n        loadAll();\r\n        setLoading(true)\r\n      },[edges])\r\n\r\n    function getPositionX(element) {\r\n        if (element == null)\r\n            return\r\n        \r\n        var rect = element.getBoundingClientRect();\r\n        return rect.x\r\n    }\r\n    function getPositionY(element) {\r\n        if (element == null){\r\n            return\r\n        }\r\n        var rect = element.getBoundingClientRect();\r\n        \r\n        return rect.y\r\n    }\r\n    function executeKruskal(nos, vertices) {\r\n        if((nos !== undefined) && (edges !== undefined)){\r\n            console.clear()\r\n            var mst = [];\r\n            var floresta = _.map(nos, function(no) { return [no]; });\r\n            var verticesOrdenados = _.sortBy(vertices, function(vertice) { return -vertice[2]; });\r\n            console.log(\" - - - - - - - - - - - - - - - - - - - - - - - -\")\r\n            console.log(\"Vertices originais - ↓\")\r\n            console.log(vertices)\r\n            console.log(\" Tamanho da Floresta - \" + floresta.length + \" nós\")\r\n            console.log(\"Floresta Original - ↓\")\r\n            console.log(floresta)\r\n            while(floresta.length > 1) {\r\n                console.log(\" - - - - - - - - - - - - - - - - - - - - - - - -\")\r\n                var vertice = verticesOrdenados.pop();\r\n                var no1 = vertice[0],\r\n                    no2 = vertice[1];\r\n                var t1 = _.filter(floresta, function(arvore) {\r\n                    return _.include(arvore, no1);\r\n                });\r\n                    \r\n                var t2 = _.filter(floresta, function(arvore) {\r\n                    return _.include(arvore, no2);\r\n                });\r\n\r\n                console.log(\"Verificando se [\" + no1 + \"] e [\" + no2 + \"] estão conectados      |\")\r\n        \r\n                if (t1 !== t2) {\r\n                    floresta = _.without(floresta, t1[0], t2[0]);\r\n                    floresta.push(_.union(t1[0], t2[0]));\r\n                    mst.push(vertice);\r\n                    \r\n                    console.log('Vertice sendo verificado - [\"' + vertice[0] + '\",\"'+vertice[1]+'\",\"'+vertice[2]+'\"]       |')\r\n                    console.log(\"Floresta - ↓                                   |\")\r\n                    console.log(floresta)\r\n                    \r\n                }\r\n            }\r\n            return mst;\r\n        }\r\n    }\r\n\r\n    function quandoClicar(valorGerado){\r\n        console.log(valorGerado)\r\n        setEdges(valorGerado)\r\n        console.log(edges)\r\n        setLoading(true)\r\n    }\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n                <div className=\"Btns\">\r\n                    <button id=\"BtnSolve\" className=\"Btn\">Resolver</button>\r\n                    <button id=\"BtnBack\" className=\"Btn\">Retornar</button>\r\n                </div>\r\n                <div className=\"First-Col\">\r\n                    <div className=\"Input-Board\">\r\n                        <h2>Nós</h2> \r\n                        {nodes.length > 0 && nodes.map((val)=>{\r\n                                    return  <InputNodes  className=\"Input--Nodes\" key={val[0]} id={val[0]} value={val[0]}/>\r\n                        })}\r\n                        <h2>Vértices</h2>\r\n                        <h4>Nó_1 | Nó_2 | Peso</h4> \r\n\r\n                        <div id=\"Main--Input--Edges\" className=\"Main--Input--Edges\">                \r\n                            {edges.length > 0 && edges.map((val)=>{\r\n                                        return  <InputEdges idMain=\"Main--Edges\" onClicar={quandoClicar} className=\"Input--Edges\" key={(val[0])+\"_\"+(val[1])} id={(val[0])+\"_\"+(val[1])} valueEdge1={val[0]} valueEdge2={val[1]} valueEdge3={val[2]}/>\r\n                            })}\r\n                            <InputEdges idMain=\"Input--Edges--News\" onClicar={quandoClicar} className=\"Input--Edges\"></InputEdges>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n        \r\n\r\n                <div className=\"Second-Col\">\r\n                    <div ClassName=\"Main--Code\">\r\n                        <Code></Code>\r\n                    </div>\r\n                </div>\r\n                <div className=\"MainNodes\">\r\n                    {nodes.length > 0 && nodes.map((val)=>{\r\n                        return  <div key={val[0]} id={val[0]}>\r\n                                    <h1>{val[0]}</h1>\r\n                                </div>\r\n                    })}\r\n                {positions[0][1] !== undefined   \r\n                    && <Lines data={positions} data2={edges} cN={\"Lines\"} visibility={edgesVis}/>} \r\n                {edgesSolved !== undefined\r\n                    && <Lines data={positions} data2={edgesSolved} cN={\"LinesSolved\"} visibility={edgesVisSol}/>}  \r\n                </div>\r\n                <h1 className=\"Advice\">não é completamente responsivo (trabalhando nisso), resolução ideal (1920x1080p)</h1>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react';\nimport './App.css';\nimport Kruskal from './components/kruskal'\nfunction App() {\n  document.title = 'Kruskal'\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">       \n        \n      </header>\n      <Kruskal></Kruskal>\n    </div>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}